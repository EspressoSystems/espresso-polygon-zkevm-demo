version: "3"
services:
  aggregator:
    image: ghcr.io/espressosystems/zkevm-node:release-gibraltar
    expose:
      - 50081
      - 9091 # needed if metrics enabled
    environment:
      - ZKEVM_NODE_STATEDB_USER=state_user
      - ZKEVM_NODE_STATEDB_PASSWORD=state_password
      - ZKEVM_NODE_STATEDB_NAME=state_db
      - ZKEVM_NODE_STATEDB_HOST=zkevm-1-state-db
    volumes:
      - ./zkevm-node/test/sequencer.keystore:/pk/sequencer.keystore
      - ./zkevm-node/test/aggregator.keystore:/pk/aggregator.keystore
      - ./zkevm-node/test/config/test.node.config.toml:/app/config.toml
      - ./zkevm-node/test/config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --genesis /app/genesis.json --cfg /app/config.toml --components aggregator"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  state-db:
    image: postgres:16
    expose:
      - 5432
    volumes:
      - ./zkevm-node/db/scripts/init_prover_db.sql:/docker-entrypoint-initdb.d/1.sql
      - ./zkevm-node-additions/init_pool_db.sql:/docker-entrypoint-initdb.d/2.sql
    environment:
      - POSTGRES_USER=state_user
      - POSTGRES_PASSWORD=state_password
      - POSTGRES_DB=state_db
    command: [ "postgres", "-N", "500" ]
    healthcheck:
      # Postgres can be falsely "ready" once before running init scripts.
      # See https://github.com/docker-library/postgres/issues/146 for discusson.
      test: "pg_isready -U state_user -d state_db && sleep 1 && pg_isready -U state_user -d state_db"
      interval: 5s
      timeout: 4s
      retries: 20

  prover:
    image: hermeznetwork/zkevm-prover:88f3835
    expose:
      - 50052 # Mock prover
      - 50061 # MT
      - 50071 # Executor
    command: >
      zkProver -c /usr/src/app/config.json
    stop_signal: SIGKILL
    healthcheck:
      test: timeout 1 bash -c "cat < /dev/null > /dev/tcp/localhost/50071"
      interval: 5s
      timeout: 4s
      retries: 20

  permissionless-node:
    image: ghcr.io/espressosystems/zkevm-node:release-gibraltar
    environment:
      - ZKEVM_NODE_TRUSTED=false
      - ZKEVM_NODE_STATEDB_USER=state_user
      - ZKEVM_NODE_STATEDB_PASSWORD=state_password
      - ZKEVM_NODE_STATEDB_NAME=state_db
      - ZKEVM_NODE_POOL_DB_USER=state_user
      - ZKEVM_NODE_POOL_DB_PASSWORD=state_password
      - ZKEVM_NODE_POOL_DB_NAME=pool_db # different DB name to run pool migrations
    volumes:
      - ./zkevm-node/test/sequencer.keystore:/pk/keystore
      - ./zkevm-node/test/config/test.node.config.toml:/app/config.toml
      - ./zkevm-node/test/config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --genesis /app/genesis.json --cfg /app/config.toml --components \"rpc,synchronizer\""
    healthcheck:
      # curl not installed in container, but wget is
      test: "wget http://localhost:$$ZKEVM_NODE_RPC_PORT -q --spider --tries 1 || exit 1"
      interval: 3s
      timeout: 2s
      retries: 120
    extra_hosts:
      - "host.docker.internal:host-gateway"

  eth-tx-manager:
    image: ghcr.io/espressosystems/zkevm-node:release-gibraltar
    environment:
      - ZKEVM_NODE_STATEDB_USER=state_user
      - ZKEVM_NODE_STATEDB_PASSWORD=state_password
      - ZKEVM_NODE_STATEDB_NAME=state_db
      - ZKEVM_NODE_ETHERMAN_POEADDR=$ESPRESSO_ZKEVM_1_ROLLUP_ADDRESS
      - ZKEVM_NODE_ETHERMAN_MATICADDR=$ESPRESSO_ZKEVM_1_MATIC_ADDRESS
      - ZKEVM_NODE_ETHERMAN_GLOBALEXITROOTMANAGERADDR=$ESPRESSO_ZKEVM_1_GER_ADDRESS
      - ZKEVM_NODE_ETHERMAN_URL=$ESPRESSO_ZKEVM_L1_PROVIDER
      - ZKEVM_NODE_ETHERMAN_HOTSHOTQUERYSERVICEURL=$ESPRESSO_ZKEVM_1_ADAPTOR_QUERY_URL
      - ZKEVM_NODE_ETHERMAN_HOTSHOTADDR=$ESPRESSO_SEQUENCER_HOTSHOT_ADDRESS
      - ZKEVM_NODE_MTCLIENT_URI=$ESPRESSO_ZKEVM_1_MTCLIENT_URI
      - ZKEVM_NODE_EXECUTOR_URI=$ESPRESSO_ZKEVM_1_EXECUTOR_URI
      - ZKEVM_NODE_ETHTXMANAGER_POLLINGINTERVAL=$ESPRESSO_ZKEVM_ETH_TX_MANAGER_POLLING_INTERVAL
    volumes:
      - ./zkevm-node/test/sequencer.keystore:/pk/sequencer.keystore
      - ./zkevm-node/test/aggregator.keystore:/pk/aggregator.keystore
      - ./zkevm-node/test/config/test.node.config.toml:/app/config.toml
      - ./zkevm-node/test/config/test.genesis.config.json:/app/genesis.json
    command:
      - "/bin/sh"
      - "-c"
      - "/app/zkevm-node run --genesis /app/genesis.json --cfg /app/config.toml --components eth-tx-manager"
    extra_hosts:
      - "host.docker.internal:host-gateway"

  faucet:
    image: ghcr.io/espressosystems/discord-faucet:main
    environment:
      - ESPRESSO_DISCORD_FAUCET_DISCORD_TOKEN
      - ESPRESSO_DISCORD_FAUCET_GRANT_AMOUNT_ETHERS
      - ESPRESSO_DISCORD_FAUCET_MNEMONIC
      - ESPRESSO_DISCORD_FAUCET_NUM_CLIENTS
      - ESPRESSO_DISCORD_FAUCET_PORT
      - ESPRESSO_DISCORD_FAUCET_TRANSACTION_TIMEOUT_SECS
      - RUST_LOG
      - RUST_LOG_FORMAT
      - RUST_BACKTRACE=1
    healthcheck:
      test: curl --fail http://localhost:$$ESPRESSO_DISCORD_FAUCET_PORT/healthcheck || exit 1
      interval: 2s
      retries: 10
      timeout: 1s
    stop_grace_period: 1s

  adaptor:
    image: ghcr.io/espressosystems/espresso-polygon-zkevm-demo/polygon-zkevm-adaptor:release-gibraltar
    environment:
      - ESPRESSO_SEQUENCER_URL
      - ESPRESSO_ZKEVM_L1_PROVIDER
      - RUST_LOG
      - RUST_LOG_FORMAT
    healthcheck:
      test: curl http://localhost:$$ESPRESSO_ZKEVM_ADAPTOR_QUERY_PORT
      interval: 5s
      timeout: 3s
      retries: 120
    stop_grace_period: 1s

  blockscout-db:
    image: postgres:14
    restart: always
    command: postgres -c 'max_connections=200'
    environment:
        POSTGRES_PASSWORD: ''
        POSTGRES_USER: 'postgres'
        POSTGRES_HOST_AUTH_METHOD: 'trust'
    ports:
      - "5432"

  redis-db:
    image: 'redis:alpine'
    ports:
      - "6379"
    command: redis-server

  blockscout:
    image: ghcr.io/espressosystems/espresso-sequencer/blockscout:main
    command: sh -c "bin/blockscout eval \"Elixir.Explorer.ReleaseTasks.create_and_migrate()\" && bin/blockscout start"
    # The polygon fork below also works
    # image: hermeznetwork/zkevm-explorer:latest
    # command:
    #   - "/bin/sh"
    #   - "-c"
    #   - "mix do ecto.create, ecto.migrate; mix phx.server"
    pull_policy: always
    restart: always
    stop_grace_period: 5m
    env_file:
      - ./blockscout/docker-compose/envs/common-blockscout.env
    environment:
        SUBNETWORK: 'OP Rollup 901'
        ETHEREUM_JSONRPC_VARIANT: 'geth'
        ECTO_USE_SSL: 'false'
        SECRET_KEY_BASE: '56NtB48ear7+wMSf0IQuWDAAazhpb31qyc7GiyspBP2vh7t5zlCsF5QDv76chXeN'
        MIX_ENV: 'prod'
        INDEXER_CATCHUP_BLOCK_INTERVAL: '1s'

  smart-contract-verifier:
    image: ghcr.io/blockscout/smart-contract-verifier:${SMART_CONTRACT_VERIFIER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    env_file:
      - ./blockscout/docker-compose/envs/common-smart-contract-verifier.env

  visualizer:
    image: ghcr.io/blockscout/visualizer:${VISUALIZER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
    env_file:
      -  ./blockscout/docker-compose/envs/common-visualizer.env

  sig-provider:
    image: ghcr.io/blockscout/sig-provider:${SIG_PROVIDER_DOCKER_TAG:-latest}
    pull_policy: always
    platform: linux/amd64
    restart: always
